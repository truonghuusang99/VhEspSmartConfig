{"version":3,"sources":["../../../projects/vh-smartconfig/src/lib/vh-smartconfig.service.ts"],"names":["VhEspSmartConfig","prototype","startESP","wifiInfo","Promise","resolve","rejects","esptouch","start","success","error","stopESP","stop","res","err","Injectable","args","providedIn"],"mappings":"snBAQE,SAAAA,YAEOA,EAAAC,UAAAC,SAAA,SAASC,GACd,OAAO,IAAIC,SAAgD,SAACC,EAASC,GACnEC,SAASC,MAAML,EAAe,KAAGA,EAAgB,MAAGA,EAAmB,SAAG,IAAK,KAC7E,SAACM,GACKA,EAASJ,EAAQI,GAChBH,EAAQ,gBACZ,SAACI,GACFJ,EAAQI,UAKTV,EAAAC,UAAAU,QAAA,WACL,OAAO,IAAIP,SAAa,SAACC,EAASC,GAChCC,SAASK,MAAK,SAAAC,GAAO,OAAAR,EAAQQ,MAAM,SAAAC,GAAO,OAAAR,EAAQQ,8HArBvDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY","sourcesContent":["import { Injectable } from '@angular/core';\n\ndeclare var esptouch: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class VhEspSmartConfig {\n\n  constructor() { }\n\n  public startESP(wifiInfo: { ssid: string, bssid: string, password: string }) {\n    return new Promise<{ bssid: string, ip: string } | string>((resolve, rejects) => {\n      esptouch.start(wifiInfo['ssid'], wifiInfo['bssid'], wifiInfo['password'], \"1\", \"1\",\n        (success: any) => {\n          if (success) resolve(success)\n          else rejects(\"Not found\")\n        }, (error: any) => {\n          rejects(error)\n        })\n    })\n  }\n\n  public stopESP() {\n    return new Promise<any>((resolve, rejects) => {\n      esptouch.stop(res => resolve(res), err => rejects(err))\n    })\n  }\n}\n"]}